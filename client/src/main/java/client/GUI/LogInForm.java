package client.GUI;

import client.Controllers.AuthorizationController;
import client.Controllers.LocaleController;
import common.net.requests.ClientRequest;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.*;
import java.util.Locale;
import java.util.ResourceBundle;

public class LogInForm {
    private JPanel logInRootPanel;
    private JButton logInButton;
    private JLabel signUpLabel;
    private JPanel logInPanel;
    private JLabel welcomeLabel;
    private JLabel logInLabel;
    private JLabel usernameLabel;
    private JTextField usernameTextField;
    private JLabel passwordLabel;
    private JPasswordField passwordField;
    private JPanel signUpQuestionPanel;
    private JLabel noAccountLabel;
    private JComboBox localeComboBox;
    private JLabel localeLabel;

    public LogInForm() {
        $$$setupUI$$$();
        updateLocale();
        logInButton.addActionListener(new LogInButtonListener());
        signUpLabel.addMouseListener(new SigUpLabelListener());
        localeComboBox.addActionListener(new LocaleComboBoxListener());
    }

    private void updateLocale() {
        ResourceBundle labels = ResourceBundle.getBundle("LogInGuiLabels", LocaleController.getInstance().getCurrentLocale());
        logInButton.setText(labels.getString("logInButton"));
        signUpLabel.setText(labels.getString("signUpLabel"));
        welcomeLabel.setText(labels.getString("welcomeLabel"));
        logInLabel.setText(labels.getString("logInLabel"));
        usernameLabel.setText(labels.getString("usernameLabel"));
        passwordLabel.setText(labels.getString("passwordLabel"));
        noAccountLabel.setText(labels.getString("noAccountLabel"));
        localeLabel.setText(labels.getString("localeLabel") + ":");
    }

    private class LocaleComboBoxListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            LocaleController.getInstance().setLocale(localeComboBox.getSelectedIndex());
            updateLocale();
        }
    }

    private class LogInButtonListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            String username = usernameTextField.getText();
            String password = new String(passwordField.getPassword());
            try {
                ClientRequest.setUser(AuthorizationController.logIn(username, password));
                GUIController.getInstance().setState(GUIStates.MAIN);
            } catch (Exception ex) {
                GUIController.getInstance().showErrorMessage(ex);
            }
        }
    }

    private class SigUpLabelListener extends MouseAdapter {
        @Override
        public void mouseClicked(MouseEvent e) {
            super.mouseClicked(e);
            GUIController.getInstance().setState(GUIStates.SIGN_UP);
        }
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        logInRootPanel = new JPanel();
        logInRootPanel.setLayout(new GridBagLayout());
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 0.5;
        gbc.weighty = 0.5;
        gbc.fill = GridBagConstraints.BOTH;
        logInRootPanel.add(panel1, gbc);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridBagLayout());
        panel1.add(panel2, BorderLayout.NORTH);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(10, 10, 0, 0);
        panel2.add(localeComboBox, gbc);
        localeLabel = new JLabel();
        Font localeLabelFont = this.$$$getFont$$$(null, Font.PLAIN, 16, localeLabel.getFont());
        if (localeLabelFont != null) localeLabel.setFont(localeLabelFont);
        localeLabel.setText("Language:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.insets = new Insets(10, 10, 0, 0);
        panel2.add(localeLabel, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridBagLayout());
        panel1.add(panel3, BorderLayout.CENTER);
        logInPanel = new JPanel();
        logInPanel.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        panel3.add(logInPanel, gbc);
        welcomeLabel = new JLabel();
        Font welcomeLabelFont = this.$$$getFont$$$(null, Font.BOLD, 24, welcomeLabel.getFont());
        if (welcomeLabelFont != null) welcomeLabel.setFont(welcomeLabelFont);
        welcomeLabel.setText("Welcome back");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        logInPanel.add(welcomeLabel, gbc);
        logInLabel = new JLabel();
        Font logInLabelFont = this.$$$getFont$$$(null, Font.PLAIN, 16, logInLabel.getFont());
        if (logInLabelFont != null) logInLabel.setFont(logInLabelFont);
        logInLabel.setText("Enter login data, please");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        logInPanel.add(logInLabel, gbc);
        usernameLabel = new JLabel();
        Font usernameLabelFont = this.$$$getFont$$$(null, Font.PLAIN, 16, usernameLabel.getFont());
        if (usernameLabelFont != null) usernameLabel.setFont(usernameLabelFont);
        usernameLabel.setText("username");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        logInPanel.add(usernameLabel, gbc);
        usernameTextField = new JTextField();
        Font usernameTextFieldFont = this.$$$getFont$$$(null, Font.PLAIN, 16, usernameTextField.getFont());
        if (usernameTextFieldFont != null) usernameTextField.setFont(usernameTextFieldFont);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        logInPanel.add(usernameTextField, gbc);
        passwordLabel = new JLabel();
        Font passwordLabelFont = this.$$$getFont$$$(null, Font.PLAIN, 16, passwordLabel.getFont());
        if (passwordLabelFont != null) passwordLabel.setFont(passwordLabelFont);
        passwordLabel.setText("password");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        logInPanel.add(passwordLabel, gbc);
        passwordField = new JPasswordField();
        Font passwordFieldFont = this.$$$getFont$$$(null, Font.PLAIN, 16, passwordField.getFont());
        if (passwordFieldFont != null) passwordField.setFont(passwordFieldFont);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 7;
        gbc.weightx = 1.0;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        logInPanel.add(passwordField, gbc);
        logInButton = new JButton();
        Font logInButtonFont = this.$$$getFont$$$(null, Font.PLAIN, 16, logInButton.getFont());
        if (logInButtonFont != null) logInButton.setFont(logInButtonFont);
        logInButton.setText("Log In");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 9;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        logInPanel.add(logInButton, gbc);
        signUpQuestionPanel = new JPanel();
        signUpQuestionPanel.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 11;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        logInPanel.add(signUpQuestionPanel, gbc);
        noAccountLabel = new JLabel();
        Font noAccountLabelFont = this.$$$getFont$$$(null, Font.PLAIN, 16, noAccountLabel.getFont());
        if (noAccountLabelFont != null) noAccountLabel.setFont(noAccountLabelFont);
        noAccountLabel.setText("Don't have an account?");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        signUpQuestionPanel.add(noAccountLabel, gbc);
        signUpLabel = new JLabel();
        Font signUpLabelFont = this.$$$getFont$$$(null, Font.PLAIN, 16, signUpLabel.getFont());
        if (signUpLabelFont != null) signUpLabel.setFont(signUpLabelFont);
        signUpLabel.setForeground(new Color(-13205275));
        signUpLabel.setText("Sign Up");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        signUpQuestionPanel.add(signUpLabel, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        signUpQuestionPanel.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.VERTICAL;
        logInPanel.add(spacer2, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.VERTICAL;
        logInPanel.add(spacer3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 8;
        gbc.fill = GridBagConstraints.VERTICAL;
        logInPanel.add(spacer4, gbc);
        final JPanel spacer5 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 10;
        gbc.fill = GridBagConstraints.VERTICAL;
        logInPanel.add(spacer5, gbc);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new GridBagLayout());
        panel4.setBackground(new Color(-11961296));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.weightx = 0.5;
        gbc.weighty = 0.5;
        gbc.fill = GridBagConstraints.BOTH;
        logInRootPanel.add(panel4, gbc);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return logInRootPanel;
    }

    private void createUIComponents() {
        localeComboBox = new JComboBox<String>();
        LocaleController.getInstance().getLocaleNames().forEach(localeComboBox::addItem);
        localeComboBox.setSelectedIndex(LocaleController.getInstance().getCurrentLocaleNumber());
    }
}